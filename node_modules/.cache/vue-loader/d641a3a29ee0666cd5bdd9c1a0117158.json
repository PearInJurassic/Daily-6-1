{"remainingRequest":"C:\\Users\\Macbook Pro\\Desktop\\工作区\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Macbook Pro\\Desktop\\工作区\\src\\pages\\Map\\country.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Macbook Pro\\Desktop\\工作区\\src\\pages\\Map\\country.vue","mtime":1590587975449},{"path":"C:\\Users\\Macbook Pro\\Desktop\\工作区\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1590550697423},{"path":"C:\\Users\\Macbook Pro\\Desktop\\工作区\\node_modules\\babel-loader\\lib\\index.js","mtime":1590550697057},{"path":"C:\\Users\\Macbook Pro\\Desktop\\工作区\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1590550697423},{"path":"C:\\Users\\Macbook Pro\\Desktop\\工作区\\node_modules\\vue-loader\\lib\\index.js","mtime":1590550713661}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KCiAgdmFyIGVjaGFydHMgPSByZXF1aXJlKCdlY2hhcnRzL2xpYi9lY2hhcnRzJyk7CiAgcmVxdWlyZSgnZWNoYXJ0cy9tYXAvanMvY2hpbmEnKSAvLyDlvJXlhaXkuK3lm73lnLDlm77mlbDmja4KICByZXF1aXJlKCdlY2hhcnRzL21hcC9qcy93b3JsZCcpIC8vIOW8leWFpeS4lueVjOWcsOWbvuaVsOaNrgoKICBleHBvcnQgZGVmYXVsdCB7CiAgICBuYW1lOiAnY291bnRyeScsCiAgICBtb3VudGVkKCkgewoKICAgICAgdGhpcy5jaGluYW1hcCgpOwoKICAgIH0sCiAgICBtZXRob2RzOiB7CgoKICAgICAgY2hpbmFtYXAoKSB7CiAgICAgICAgdmFyIG15Q2hhcnQgPSBlY2hhcnRzLmluaXQoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImNoaW5hTWFwIikpOwogICAgICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdyZXNpemUnLCBmdW5jdGlvbiAoKSB7CiAgICAgICAgICBteUNoYXJ0LnJlc2l6ZSgpCiAgICAgICAgfSkKICAgICAgICB2YXIgb3B0aW9uID0gewogICAgICAgICAgYmFja2dyb3VuZENvbG9yOiAiIzAyQUZEQiIsCiAgICAgICAgICBkYXRhUmFuZ2U6IHsKICAgICAgICAgICAgc2hvdzogZmFsc2UsCiAgICAgICAgICAgIG1pbjogMCwKICAgICAgICAgICAgbWF4OiAxMDAwMDAwLAogICAgICAgICAgICB0ZXh0OiBbJ0hpZ2gnLCAnTG93J10sCiAgICAgICAgICAgIHJlYWx0aW1lOiB0cnVlLAogICAgICAgICAgICBjYWxjdWxhYmxlOiB0cnVlLAogICAgICAgICAgICBjb2xvcjogWydvcmFuZ2VyZWQnLCAneWVsbG93JywgJ2xpZ2h0c2t5Ymx1ZSddCiAgICAgICAgICB9LAogICAgICAgICAgLyp0aXRsZTogewogICAgICAgICAgICAgIHNob3c6dHJ1ZSwKICAgICAgICAgICAgICB0ZXh0OiAn5qCH6aKYLS3kuK3lm73lnLDlm74nLAogICAgICAgICAgICAgIHN1YnRleHQ6ICdtYWRlIGJ5IHh6YycsCiAgICAgICAgICAgICAgbGVmdDonY2VudGVyJwogICAgICAgICAgfSwqLwogICAgICAgICAgdG9vbHRpcDogewogICAgICAgICAgICB0cmlnZ2VyOiAnaXRlbScKICAgICAgICAgIH0sCiAgICAgICAgICAvL+W3puS+p+Wwj+WvvOiIquWbvuaghwogICAgICAgICAgdmlzdWFsTWFwOiB7CiAgICAgICAgICAgIHNob3c6IHRydWUsCiAgICAgICAgICAgIHg6ICdsZWZ0JywKICAgICAgICAgICAgeTogJ2JvdHRvbScsCiAgICAgICAgICAgIHNwbGl0TGlzdDogWwogICAgICAgICAgICAgIHtzdGFydDogMTAsIGVuZDogMjB9LAogICAgICAgICAgICAgIHtzdGFydDogNiwgZW5kOiAxMH0sCiAgICAgICAgICAgICAge3N0YXJ0OiAwLCBlbmQ6IDZ9LAogICAgICAgICAgICBdLAogICAgICAgICAgICBjb2xvcjogWycjMUU5MEZGJywgJyM3RkZGQUEnLCAnI0YwRTY4QyddCiAgICAgICAgICB9LAogICAgICAgICAgLy/phY3nva7lsZ7mgKcKICAgICAgICAgIHNlcmllczogW3sKICAgICAgICAgICAgbmFtZTogJ+aVsOmHjycsCiAgICAgICAgICAgIHR5cGU6ICdtYXAnLAoKICAgICAgICAgICAgbWFwOiAnY2hpbmEnLAogICAgICAgICAgICByb2FtOiBmYWxzZSwKICAgICAgICAgICAgem9vbTogMS4yLAogICAgICAgICAgICBsYWJlbDogewogICAgICAgICAgICAgIG5vcm1hbDogewogICAgICAgICAgICAgICAgc2hvdzogdHJ1ZSwKICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgIGVtcGhhc2lzOiB7CiAgICAgICAgICAgICAgICBzaG93OiBmYWxzZQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSwKICAgICAgICAgICAgZGF0YTogWwogICAgICAgICAgICAgIHtuYW1lOiAn5YyX5LqsJywgdmFsdWU6IHJhbmRvbURhdGEoKX0sIHtuYW1lOiAn5aSp5rSlJywgdmFsdWU6IHJhbmRvbURhdGEoKX0sCiAgICAgICAgICAgICAge25hbWU6ICfkuIrmtbcnLCB2YWx1ZTogcmFuZG9tRGF0YSgpfSwge25hbWU6ICfph43luoYnLCB2YWx1ZTogcmFuZG9tRGF0YSgpfSwKICAgICAgICAgICAgICB7bmFtZTogJ+ays+WMlycsIHZhbHVlOiByYW5kb21EYXRhKCl9LCB7bmFtZTogJ+ays+WNlycsIHZhbHVlOiByYW5kb21EYXRhKCl9LAogICAgICAgICAgICAgIHtuYW1lOiAn5LqR5Y2XJywgdmFsdWU6IHJhbmRvbURhdGEoKX0sIHtuYW1lOiAn6L695a6BJywgdmFsdWU6IHJhbmRvbURhdGEoKX0sCiAgICAgICAgICAgICAge25hbWU6ICfpu5HpvpnmsZ8nLCB2YWx1ZTogcmFuZG9tRGF0YSgpfSwge25hbWU6ICfmuZbljZcnLCB2YWx1ZTogcmFuZG9tRGF0YSgpfSwKICAgICAgICAgICAgICB7bmFtZTogJ+WuieW+vScsIHZhbHVlOiByYW5kb21EYXRhKCl9LCB7bmFtZTogJ+WxseS4nCcsIHZhbHVlOiByYW5kb21EYXRhKCl9LAogICAgICAgICAgICAgIHtuYW1lOiAn5paw55aGJywgdmFsdWU6IHJhbmRvbURhdGEoKX0sIHtuYW1lOiAn5rGf6IuPJywgdmFsdWU6IHJhbmRvbURhdGEoKX0sCiAgICAgICAgICAgICAge25hbWU6ICfmtZnmsZ8nLCB2YWx1ZTogcmFuZG9tRGF0YSgpfSwge25hbWU6ICfmsZ/opb8nLCB2YWx1ZTogcmFuZG9tRGF0YSgpfSwKICAgICAgICAgICAgICB7bmFtZTogJ+a5luWMlycsIHZhbHVlOiByYW5kb21EYXRhKCl9LCB7bmFtZTogJ+W5v+ilvycsIHZhbHVlOiByYW5kb21EYXRhKCl9LAogICAgICAgICAgICAgIHtuYW1lOiAn55SY6IKDJywgdmFsdWU6IHJhbmRvbURhdGEoKX0sIHtuYW1lOiAn5bGx6KW/JywgdmFsdWU6IHJhbmRvbURhdGEoKX0sCiAgICAgICAgICAgICAge25hbWU6ICflhoXokpnlj6QnLCB2YWx1ZTogcmFuZG9tRGF0YSgpfSwge25hbWU6ICfpmZXopb8nLCB2YWx1ZTogcmFuZG9tRGF0YSgpfSwKICAgICAgICAgICAgICB7bmFtZTogJ+WQieaelycsIHZhbHVlOiByYW5kb21EYXRhKCl9LCB7bmFtZTogJ+emj+W7uicsIHZhbHVlOiByYW5kb21EYXRhKCl9LAogICAgICAgICAgICAgIHtuYW1lOiAn6LS15beeJywgdmFsdWU6IHJhbmRvbURhdGEoKX0sIHtuYW1lOiAn5bm/5LicJywgdmFsdWU6IHJhbmRvbURhdGEoKX0sCiAgICAgICAgICAgICAge25hbWU6ICfpnZLmtbcnLCB2YWx1ZTogcmFuZG9tRGF0YSgpfSwge25hbWU6ICfopb/ol48nLCB2YWx1ZTogcmFuZG9tRGF0YSgpfSwKICAgICAgICAgICAgICB7bmFtZTogJ+Wbm+W3nScsIHZhbHVlOiByYW5kb21EYXRhKCl9LCB7bmFtZTogJ+WugeWkjycsIHZhbHVlOiByYW5kb21EYXRhKCl9LAogICAgICAgICAgICAgIHtuYW1lOiAn5rW35Y2XJywgdmFsdWU6IHJhbmRvbURhdGEoKX0sIHtuYW1lOiAn5Y+w5rm+JywgdmFsdWU6IHJhbmRvbURhdGEoKX0sCiAgICAgICAgICAgICAge25hbWU6ICfpppnmuK8nLCB2YWx1ZTogcmFuZG9tRGF0YSgpfSwge25hbWU6ICfmvrPpl6gnLCB2YWx1ZTogcmFuZG9tRGF0YSgpfQoKCiAgICAgICAgICAgIF0KICAgICAgICAgIH1dCiAgICAgICAgfTsKCiAgICAgICAgLy92YXIgY291bnQgPSAtMTsKICAgICAgICBzZXRJbnRlcnZhbChmdW5jdGlvbiAoKSB7CgogICAgICAgICAgLy92YXIgY3VyciA9IGNvdW50ICUgMzQ7IC8v5pWw5a2X5Li6Y2l0eUFyci5sZW5ndGgKCgogICAgICAgICAgbXlDaGFydC5kaXNwYXRjaEFjdGlvbih7CiAgICAgICAgICAgIHR5cGU6ICdkb3ducGxheScsCiAgICAgICAgICAgIHNlcmllc0luZGV4OiAwLAoKICAgICAgICAgIH0pOwogICAgICAgICAgLypteUNoYXJ0LmRpc3BhdGNoQWN0aW9uKHsKICAgICAgICAgICAgICB0eXBlOiAnaGlnaGxpZ2h0JywKICAgICAgICAgICAgICBzZXJpZXNJbmRleDogMCwKICAgICAgICAgICAgICBkYXRhSW5kZXg6IGN1cnIKICAgICAgICAgIH0pOyovCgoKICAgICAgICAgIC8qbXlDaGFydC5kaXNwYXRjaEFjdGlvbih7CiAgICAgICAgICAgICAgdHlwZTogJ3Nob3dUaXAnLAogICAgICAgICAgICAgIHNlcmllc0luZGV4OiAwLCAvLyDlm6DkuLrlj6rmnInkuIDnu4TmlbDmja7vvIzmiYDku6XmraTlpITlupTkuLowCiAgICAgICAgICAgICAgZGF0YUluZGV4OiBjdXJyCiAgICAgICAgICB9KTsKICAgICAgICAgIGNvdW50Kys7Ki8KCiAgICAgICAgICAvKgogICAgICAgICAgaWYgKGluZGV4ID4gY2l0eUFyci5sZW5ndGggLSAxKSB7CiAgICAgICAgICAgIGNvdW50ID0gLTEKICAgICAgICAgIH0KICAgICAgICAgICovCiAgICAgICAgfSwgNTAwKTsKCgogICAgICAgIC8qKgogICAgICAgICAqICDkvb/nlKjliJrmjIflrprnmoTphY3nva7pobnlkozmlbDmja7mmL7npLrlm77ooajjgIIKICAgICAgICAgKiAgKi8KICAgICAgICBteUNoYXJ0LnNldE9wdGlvbihvcHRpb24pOwoKICAgICAgICAvL+iOt+WPlumaj+acuuaVsAogICAgICAgIGZ1bmN0aW9uIHJhbmRvbURhdGEoKSB7CiAgICAgICAgICByZXR1cm4gTWF0aC5yb3VuZChNYXRoLnJhbmRvbSgpICogKDEyIC0gMSkgKyAxKQogICAgICAgIH0KCgovLyBteUNoYXJ0Lm9uKCdtb3VzZW92ZXInLCBmdW5jdGlvbiAocGFyYW1zKSB7Ci8vIHZhciBkYXRhSW5kZXggPSBwYXJhbXMuZGF0YUluZGV4OwovLyAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coZGF0YUluZGV4KTsKLy8gICAgICAgICAgICAgfSk7CgoKICAgICAgICB2YXIgbiA9IFsn56aP5bee5biCJywgJ+iOhueUsOW4gicsICfms4nlt57luIInLCAn5Y6m6Zeo5biCJywgJ+a8s+W3nuW4gicsICfpvpnlsqnluIInLCAn5LiJ5piO5biCJywgJ+WNl+W5s+W4gicsICflroHlvrfluIInXQogICAgICAgIHZhciBqID0gWzExOS4zMCwgMTE4Ljk1LCAxMTguNzcsIDExOC4xOCwgMTE3LjY1LCAxMTcuMDMsIDExNy42MiwgMTE4LjA3LCAxMTkuNjJdCiAgICAgICAgdmFyIHcgPSBbMjYuMDgsIDI1LjQzLCAyNC44OCwgMjQuNTgsIDI0LjUyLCAyNS4xMCwgMjYuMjcsIDI3LjM1LCAyNi43N10KICAgICAgICBsZXQgdGhhdCA9IHRoaXM7CgogICAgICAgIG15Q2hhcnQub24oJ2NsaWNrJywgZnVuY3Rpb24gKGNoaW5hUGFyYW0pIHsKICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgOTsgaSsrKQogICAgICAgICAgICBpZiAoY2hpbmFQYXJhbS5uYW1lID09IG5baV0pIHsKICAgICAgICAgICAgICB0aGF0LiRyb3V0ZXIucHVzaCh7CiAgICAgICAgICAgICAgICAicGF0aCI6ICIvZnVqaWFuIiwKICAgICAgICAgICAgICAgICJxdWVyeSI6IHsKICAgICAgICAgICAgICAgICAgIngiOiBqW2ldLAogICAgICAgICAgICAgICAgICAieSI6IHdbaV0sCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgfQogICAgICAgICAgLyppZiggY2hpbmFQYXJhbS5uYW1lPT0n5YyX5LqsJyl7CgogICAgICAgICAgfSovCiAgICAgICAgICB2YXIgb3B0aW9uID0gbXlDaGFydC5nZXRPcHRpb24oKTsKICAgICAgICAgIG9wdGlvbi5zZXJpZXNbMF0ubWFwID0gY2hpbmFQYXJhbS5uYW1lOwogICAgICAgICAgb3B0aW9uLnNlcmllc1swXS5tYXBUeXBlID0gY2hpbmFQYXJhbS5uYW1lOwogICAgICAgICAgbXlDaGFydC5jbGVhcigpOwogICAgICAgICAgY29uc29sZS5sb2coY2hpbmFQYXJhbS5uYW1lKTsKICAgICAgICAgIG15Q2hhcnQuc2V0T3B0aW9uKG9wdGlvbiwgdHJ1ZSk7CgoKICAgICAgICB9KTsKCgogICAgICB9CiAgICB9LAogICAgY3JlYXRlZCgpIHsKCiAgICB9LAogICAgd2F0Y2g6IHt9CiAgfQoK"},{"version":3,"sources":["country.vue"],"names":[],"mappings":";;;;;;;AAOA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;;AAEA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA","file":"country.vue","sourceRoot":"src/pages/Map","sourcesContent":["<template>\r\n    <div id=\"country\">\r\n        <div id=\"chinaMap\" ref=\"myEchart\" style=\"height:800px;width:100%;\"></div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n  var echarts = require('echarts/lib/echarts');\r\n  require('echarts/map/js/china') // 引入中国地图数据\r\n  require('echarts/map/js/world') // 引入世界地图数据\r\n\r\n  export default {\r\n    name: 'country',\r\n    mounted() {\r\n\r\n      this.chinamap();\r\n\r\n    },\r\n    methods: {\r\n\r\n\r\n      chinamap() {\r\n        var myChart = echarts.init(document.getElementById(\"chinaMap\"));\r\n        window.addEventListener('resize', function () {\r\n          myChart.resize()\r\n        })\r\n        var option = {\r\n          backgroundColor: \"#02AFDB\",\r\n          dataRange: {\r\n            show: false,\r\n            min: 0,\r\n            max: 1000000,\r\n            text: ['High', 'Low'],\r\n            realtime: true,\r\n            calculable: true,\r\n            color: ['orangered', 'yellow', 'lightskyblue']\r\n          },\r\n          /*title: {\r\n              show:true,\r\n              text: '标题--中国地图',\r\n              subtext: 'made by xzc',\r\n              left:'center'\r\n          },*/\r\n          tooltip: {\r\n            trigger: 'item'\r\n          },\r\n          //左侧小导航图标\r\n          visualMap: {\r\n            show: true,\r\n            x: 'left',\r\n            y: 'bottom',\r\n            splitList: [\r\n              {start: 10, end: 20},\r\n              {start: 6, end: 10},\r\n              {start: 0, end: 6},\r\n            ],\r\n            color: ['#1E90FF', '#7FFFAA', '#F0E68C']\r\n          },\r\n          //配置属性\r\n          series: [{\r\n            name: '数量',\r\n            type: 'map',\r\n\r\n            map: 'china',\r\n            roam: false,\r\n            zoom: 1.2,\r\n            label: {\r\n              normal: {\r\n                show: true,\r\n              },\r\n              emphasis: {\r\n                show: false\r\n              }\r\n            },\r\n            data: [\r\n              {name: '北京', value: randomData()}, {name: '天津', value: randomData()},\r\n              {name: '上海', value: randomData()}, {name: '重庆', value: randomData()},\r\n              {name: '河北', value: randomData()}, {name: '河南', value: randomData()},\r\n              {name: '云南', value: randomData()}, {name: '辽宁', value: randomData()},\r\n              {name: '黑龙江', value: randomData()}, {name: '湖南', value: randomData()},\r\n              {name: '安徽', value: randomData()}, {name: '山东', value: randomData()},\r\n              {name: '新疆', value: randomData()}, {name: '江苏', value: randomData()},\r\n              {name: '浙江', value: randomData()}, {name: '江西', value: randomData()},\r\n              {name: '湖北', value: randomData()}, {name: '广西', value: randomData()},\r\n              {name: '甘肃', value: randomData()}, {name: '山西', value: randomData()},\r\n              {name: '内蒙古', value: randomData()}, {name: '陕西', value: randomData()},\r\n              {name: '吉林', value: randomData()}, {name: '福建', value: randomData()},\r\n              {name: '贵州', value: randomData()}, {name: '广东', value: randomData()},\r\n              {name: '青海', value: randomData()}, {name: '西藏', value: randomData()},\r\n              {name: '四川', value: randomData()}, {name: '宁夏', value: randomData()},\r\n              {name: '海南', value: randomData()}, {name: '台湾', value: randomData()},\r\n              {name: '香港', value: randomData()}, {name: '澳门', value: randomData()}\r\n\r\n\r\n            ]\r\n          }]\r\n        };\r\n\r\n        //var count = -1;\r\n        setInterval(function () {\r\n\r\n          //var curr = count % 34; //数字为cityArr.length\r\n\r\n\r\n          myChart.dispatchAction({\r\n            type: 'downplay',\r\n            seriesIndex: 0,\r\n\r\n          });\r\n          /*myChart.dispatchAction({\r\n              type: 'highlight',\r\n              seriesIndex: 0,\r\n              dataIndex: curr\r\n          });*/\r\n\r\n\r\n          /*myChart.dispatchAction({\r\n              type: 'showTip',\r\n              seriesIndex: 0, // 因为只有一组数据，所以此处应为0\r\n              dataIndex: curr\r\n          });\r\n          count++;*/\r\n\r\n          /*\r\n          if (index > cityArr.length - 1) {\r\n            count = -1\r\n          }\r\n          */\r\n        }, 500);\r\n\r\n\r\n        /**\r\n         *  使用刚指定的配置项和数据显示图表。\r\n         *  */\r\n        myChart.setOption(option);\r\n\r\n        //获取随机数\r\n        function randomData() {\r\n          return Math.round(Math.random() * (12 - 1) + 1)\r\n        }\r\n\r\n\r\n// myChart.on('mouseover', function (params) {\r\n// var dataIndex = params.dataIndex;\r\n//                 console.log(dataIndex);\r\n//             });\r\n\r\n\r\n        var n = ['福州市', '莆田市', '泉州市', '厦门市', '漳州市', '龙岩市', '三明市', '南平市', '宁德市']\r\n        var j = [119.30, 118.95, 118.77, 118.18, 117.65, 117.03, 117.62, 118.07, 119.62]\r\n        var w = [26.08, 25.43, 24.88, 24.58, 24.52, 25.10, 26.27, 27.35, 26.77]\r\n        let that = this;\r\n\r\n        myChart.on('click', function (chinaParam) {\r\n          for (var i = 0; i < 9; i++)\r\n            if (chinaParam.name == n[i]) {\r\n              that.$router.push({\r\n                \"path\": \"/fujian\",\r\n                \"query\": {\r\n                  \"x\": j[i],\r\n                  \"y\": w[i],\r\n                }\r\n              })\r\n            }\r\n          /*if( chinaParam.name=='北京'){\r\n\r\n          }*/\r\n          var option = myChart.getOption();\r\n          option.series[0].map = chinaParam.name;\r\n          option.series[0].mapType = chinaParam.name;\r\n          myChart.clear();\r\n          console.log(chinaParam.name);\r\n          myChart.setOption(option, true);\r\n\r\n\r\n        });\r\n\r\n\r\n      }\r\n    },\r\n    created() {\r\n\r\n    },\r\n    watch: {}\r\n  }\r\n\r\n</script>\r\n<style scoped>\r\n    #fujian {\r\n        min-height: 100vh;\r\n    }\r\n</style>\r\n"]}]}