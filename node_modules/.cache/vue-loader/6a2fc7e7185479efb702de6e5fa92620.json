{"remainingRequest":"C:\\Users\\Macbook Pro\\Desktop\\新建文件夹 (2)\\Daily-6-1\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Macbook Pro\\Desktop\\新建文件夹 (2)\\Daily-6-1\\src\\pages\\PostPage\\components\\Panel\\PanelTag.vue?vue&type=style&index=0&id=0aa7e644&scoped=true&lang=css&","dependencies":[{"path":"C:\\Users\\Macbook Pro\\Desktop\\新建文件夹 (2)\\Daily-6-1\\src\\pages\\PostPage\\components\\Panel\\PanelTag.vue","mtime":1590508887523},{"path":"C:\\Users\\Macbook Pro\\Desktop\\新建文件夹 (2)\\Daily-6-1\\node_modules\\css-loader\\dist\\cjs.js","mtime":1590508869598},{"path":"C:\\Users\\Macbook Pro\\Desktop\\新建文件夹 (2)\\Daily-6-1\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1590508885677},{"path":"C:\\Users\\Macbook Pro\\Desktop\\新建文件夹 (2)\\Daily-6-1\\node_modules\\postcss-loader\\src\\index.js","mtime":1590508878005},{"path":"C:\\Users\\Macbook Pro\\Desktop\\新建文件夹 (2)\\Daily-6-1\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1590508866028},{"path":"C:\\Users\\Macbook Pro\\Desktop\\新建文件夹 (2)\\Daily-6-1\\node_modules\\vue-loader\\lib\\index.js","mtime":1590508885674}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLlRhZ0FsbCB7CiAgICBtYXJnaW46IDE1cHggMTJweDsKfQouZWwtdGFnICsgLmVsLXRhZyB7CiAgICBtYXJnaW4tbGVmdDogMTBweDsKfQouYnV0dG9uLW5ldy10YWcgewogICAgbWFyZ2luLWxlZnQ6IDEwcHg7CiAgICBoZWlnaHQ6IDMycHg7CiAgICBsaW5lLWhlaWdodDogMzBweDsKICAgIHBhZGRpbmctdG9wOiAwOwogICAgcGFkZGluZy1ib3R0b206IDA7Cn0KLmlucHV0LW5ldy10YWcgewogICAgd2lkdGg6IDkwcHg7CiAgICBtYXJnaW4tbGVmdDogMTBweDsKICAgIHZlcnRpY2FsLWFsaWduOiBib3R0b207Cn0K"},{"version":3,"sources":["PanelTag.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"PanelTag.vue","sourceRoot":"src/pages/PostPage/components/Panel","sourcesContent":["<template>\r\n    <div class=\"TagAll\">\r\n        <el-tag\r\n                :key=\"index\"\r\n                v-for=\"(tag,index) in dynamicTags\"\r\n                closable\r\n                :disable-transitions=\"false\"\r\n                @close=\"handleClose(tag)\">\r\n            {{tag.tagContent}}\r\n        </el-tag>\r\n        <el-input\r\n                class=\"input-new-tag\"\r\n                v-if=\"inputVisible\"\r\n                v-model=\"inputValue\"\r\n                ref=\"saveTagInput\"\r\n                size=\"small\"\r\n                @keyup.enter.native=\"handleInputConfirm\"\r\n                @blur=\"handleInputConfirm\"\r\n        >\r\n        </el-input>\r\n        <el-button v-else class=\"button-new-tag\" size=\"small\" @click=\"showInput\">+ New Tag</el-button>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n\r\n  export default {\r\n    name: \"PanelTag\",\r\n    data() {\r\n      return {\r\n        dynamicTags: [],\r\n        inputVisible: false,\r\n        inputValue: ''\r\n      };\r\n    },\r\n    props:{\r\n      item:{\r\n        required:true,\r\n      }\r\n    },\r\n    methods: {\r\n      handleClose(tag) {\r\n\r\n        this.axios.get(`${this.GLOBAL.apiUrl}/removetag`,{\r\n          params:{\r\n            tagId:tag.tagId\r\n          }\r\n        }).then((response) =>{\r\n          if(response.data.success) {\r\n            this.dynamicTags.splice(this.dynamicTags.indexOf(tag), 1);\r\n            this.$message({\r\n              message:`tag${tag.tagContent}删除成功`,\r\n              type:'success'\r\n            })\r\n\r\n          }\r\n        })\r\n      },\r\n\r\n      showInput() {\r\n        this.inputVisible = true;\r\n        this.$nextTick( () => {\r\n          this.$refs.saveTagInput.$refs.input.focus();\r\n        });\r\n      },\r\n\r\n      handleInputConfirm() {\r\n        let inputValue = this.inputValue;\r\n        if (inputValue) {\r\n          this.axios.post(`${this.GLOBAL.apiUrl}/addtag`,{\r\n              tagContent:inputValue,\r\n              postId:this.item.postId,\r\n          })\r\n            .then((response)=>{\r\n            this.dynamicTags.push(\r\n              {\r\n                tagId:response.data.tagId,\r\n                tagContent: inputValue\r\n              });\r\n          })\r\n        }\r\n        this.inputVisible = false;\r\n        this.inputValue = '';\r\n      }\r\n    },\r\n    created() {\r\n      let that = this;\r\n      this.axios.get(`${this.GLOBAL.apiUrl}//listtag`,{\r\n        params:{\r\n          postId: that.item.postId,\r\n        }\r\n      }).then((response)=>{\r\n        let tagList = response.data.tagList\r\n        for(let index in tagList) {\r\n          this.dynamicTags.push(tagList[index]);\r\n        }\r\n      })\r\n    }\r\n  }\r\n</script>\r\n\r\n<style scoped>\r\n    .TagAll {\r\n        margin: 15px 12px;\r\n    }\r\n    .el-tag + .el-tag {\r\n        margin-left: 10px;\r\n    }\r\n    .button-new-tag {\r\n        margin-left: 10px;\r\n        height: 32px;\r\n        line-height: 30px;\r\n        padding-top: 0;\r\n        padding-bottom: 0;\r\n    }\r\n    .input-new-tag {\r\n        width: 90px;\r\n        margin-left: 10px;\r\n        vertical-align: bottom;\r\n    }\r\n</style>"]}]}