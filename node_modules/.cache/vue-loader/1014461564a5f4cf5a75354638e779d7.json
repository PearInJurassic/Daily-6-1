{"remainingRequest":"C:\\Users\\Macbook Pro\\Desktop\\工作区\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Macbook Pro\\Desktop\\工作区\\src\\pages\\Map\\fujian.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Macbook Pro\\Desktop\\工作区\\src\\pages\\Map\\fujian.vue","mtime":1590747435992},{"path":"C:\\Users\\Macbook Pro\\Desktop\\工作区\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1590550697423},{"path":"C:\\Users\\Macbook Pro\\Desktop\\工作区\\node_modules\\babel-loader\\lib\\index.js","mtime":1590550697057},{"path":"C:\\Users\\Macbook Pro\\Desktop\\工作区\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1590550697423},{"path":"C:\\Users\\Macbook Pro\\Desktop\\工作区\\node_modules\\vue-loader\\lib\\index.js","mtime":1590550713661}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["fujian.vue"],"names":[],"mappings":";;;;;;;AAOA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"fujian.vue","sourceRoot":"src/pages/Map","sourcesContent":["<template>\r\n    <div id=\"fujian\">\r\n    </div>\r\n\r\n</template>\r\n\r\n<script>\r\n  import BMapGL from 'BMap'\r\n  import axios from 'axios'\r\n\r\n  export default {\r\n    name: 'fujian',\r\n    created() {\r\n      this.geApitData();\r\n    },\r\n    data() {\r\n      return {\r\n        test: [],\r\n        //地区数据(以城市为单位)，暂时只存放了福建的城市\r\n        area: [\r\n          {\r\n            \"name\": \"福州市\",\r\n            \"id\": \"10001\",\r\n            \"color\": [],//对应的12块地区显示的渲染颜色\r\n            \"long\": 119.10,//经度\r\n            \"lati\": 25.80,//纬度\r\n            \"data\": []//对应的12块地区的帖子数\r\n          },\r\n          {\r\n            \"name\": \"莆田市\",\r\n            \"id\": \"10002\",\r\n            \"color\": [],//对应的12块地区显示的渲染颜色\r\n            \"long\": 118.75,//经度\r\n            \"lati\": 25.23,//纬度\r\n            \"data\": []//对应的12块地区的帖子数\r\n          },\r\n          {\r\n            \"name\": \"泉州市\",\r\n            \"id\": \"10003\",\r\n            \"color\": [],//对应的12块地区显示的渲染颜色\r\n            \"long\": 118.57,//经度\r\n            \"lati\": 24.68,//纬度\r\n            \"data\": []//对应的12块地区的帖子数\r\n          },\r\n          {\r\n            \"name\": \"厦门市\",\r\n            \"id\": \"10004\",\r\n            \"color\": [],//对应的12块地区显示的渲染颜色\r\n            \"long\": 117.98,//经度\r\n            \"lati\": 24.38,//纬度\r\n            \"data\": []//对应的12块地区的帖子数\r\n          },\r\n          {\r\n            \"name\": \"漳州市\",\r\n            \"id\": \"10005\",\r\n            \"color\": [],//对应的12块地区显示的渲染颜色\r\n            \"long\": 117.45,//经度\r\n            \"lati\": 24.32,//纬度\r\n            \"data\": []//对应的12块地区的帖子数\r\n          },\r\n          {\r\n            \"name\": \"龙岩市\",\r\n            \"id\": \"10006\",\r\n            \"color\": [],//对应的12块地区显示的渲染颜色\r\n            \"long\": 116.83,//经度\r\n            \"lati\": 24.90,//纬度\r\n            \"data\": []//对应的12块地区的帖子数\r\n          },\r\n          {\r\n            \"name\": \"三明市\",\r\n            \"id\": \"10007\",\r\n            \"color\": [],//对应的12块地区显示的渲染颜色\r\n            \"long\": 117.42,//经度\r\n            \"lati\": 26.07,//纬度\r\n            \"data\": []//对应的12块地区的帖子数\r\n          },\r\n          {\r\n            \"name\": \"南平市\",\r\n            \"id\": \"10008\",\r\n            \"color\": [],//对应的12块地区显示的渲染颜色\r\n            \"long\": 117.87,//经度\r\n            \"lati\": 27.15,//纬度\r\n            \"data\": []//对应的12块地区的帖子数\r\n          },\r\n          {\r\n            \"name\": \"宁德市\",\r\n            \"id\": \"10009\",\r\n            \"color\": [],//对应的12块地区显示的渲染颜色\r\n            \"long\": 119.42,//经度\r\n            \"lati\": 26.57,//纬度\r\n            \"data\": []//对应的12块地区的帖子数\r\n          }\r\n        ],\r\n        //色块和本块数据的关系\r\n        colorlist: [\r\n          {\r\n            \"color\": \"#CCEEFF\",\r\n            \"start\": 0,\r\n            \"end\": 100\r\n          },\r\n          {\r\n            \"color\": \"#77DDFF\",\r\n            \"start\": 101,\r\n            \"end\": 1000\r\n          },\r\n          {\r\n            \"color\": \"#33CCFF\",\r\n            \"start\": 1001,\r\n            \"end\": 5000\r\n          },\r\n          {\r\n            \"color\": \"#00BBFF\",\r\n            \"start\": 5001,\r\n            \"end\": 10000\r\n          },\r\n          {\r\n            \"color\": \"#0066FF\",\r\n            \"start\": 10001,\r\n            \"end\": 100000\r\n          },\r\n        ]\r\n      }\r\n    },\r\n    methods: {\r\n      async geApitData() {\r\n        var _this = this;\r\n        let list = new Array(81);\r\n        for (var index = 0; index < 81; index++) {\r\n          _this.$set(list, index, 10000)\r\n        }\r\n        var a = 0;\r\n        for (var s = 0; s < 9; s++) {\r\n          for (var f = 1; f <= 9; f++) {\r\n            //转异步为同步\r\n            try {\r\n              let response = await axios.get('http://47.107.77.163:8080/demo/area/getareabyname', {\r\n                params: {\r\n                  areaName: _this.area[s].name + f.toString()\r\n                },\r\n              })\r\n              //then获取成功；response成功后的返回值（对象）\r\n              _this.$set(list, a, response.data.area.bubbleNum)\r\n            } catch (err) {\r\n              console.log(err)\r\n            }\r\n            a++;\r\n          }\r\n        }\r\n        this.test = list;\r\n        for (var t = 0; t < _this.test.length; t++)\r\n          console.log(_this.test[t])\r\n      },\r\n      createMap() {\r\n        /* eslint-disable */\r\n        // 创建Map实例\r\n        var map = new BMapGL.Map(\"fujian\")\r\n        // 初始化地图,设置中心点坐标和地图级别\r\n        map.centerAndZoom(new BMapGL.Point(this.$route.query.x, this.$route.query.y), 11)\r\n        //添加地图类型控件\r\n        map.addControl(new BMapGL.MapTypeControl({\r\n          mapTypes: [BMAP_NORMAL_MAP, BMAP_HYBRID_MAP]\r\n        }))\r\n        // 设置地图显示的城市 此项是必须设置的\r\n        map.setCurrentCity(\"北京\")\r\n        //开启鼠标滚轮缩放\r\n        map.enableScrollWheelZoom(true)\r\n        /* eslint-enable */\r\n\r\n        //给区块染色\r\n\r\n        //先定义好每块的颜色\r\n        var num = 0;\r\n        for (var i = 0; i < this.area.length; i++)\r\n          for (var n = 0; n < 9; n++)\r\n            for (var temp = 0; temp < this.colorlist.length; temp++) {\r\n              if (this.test[num] >= this.colorlist[temp].start && this.test[num] <= this.colorlist[temp].end) {\r\n                this.area[i].color.push(this.colorlist[temp].color);\r\n                num++;\r\n                console.log(\"???\")\r\n                break;\r\n                \r\n              }\r\n            }\r\n\r\n        function add_overlay() {\r\n          map.addOverlay(rectangle);         //增加矩形\r\n        }\r\n\r\n        for (var p = 0; p < this.area.length; p++) {\r\n          var m1 = 0;\r\n          for (var i2 = this.area[p].long; i2 < this.area[p].long + 0.45; i2 += 0.15)\r\n            for (var n2 = this.area[p].lati; n2 < this.area[p].lati + 0.3; n2 += 0.15) {\r\n              var pStart = new BMapGL.Point(i2, n2);\r\n              var pEnd = new BMapGL.Point(i2 + 0.15, n2 + 0.15);\r\n              var rectangle = new BMapGL.Polygon([\r\n                new BMapGL.Point(pStart.lng, pStart.lat),\r\n                new BMapGL.Point(pEnd.lng, pStart.lat),\r\n                new BMapGL.Point(pEnd.lng, pEnd.lat),\r\n                new BMapGL.Point(pStart.lng, pEnd.lat)\r\n              ], {strokeColor: \"white\", strokeWeight: 2, strokeOpacity: 0.5, fillColor: this.area[p].color[m1]});  //创建矩形\r\n              //添加覆盖物\r\n              m1++;\r\n\r\n              add_overlay();\r\n            }\r\n        }\r\n      },\r\n\r\n    },\r\n    computed: {\r\n\r\n      gettest() {\r\n        return this.test;\r\n      }\r\n    },\r\n    watch: {\r\n      //监听时间轴开始日期变化\r\n      gettest() {\r\n        console.log(\"hjghghff\")\r\n        this.createMap()\r\n      }\r\n    },\r\n    mounted() {\r\n      this.createMap()\r\n    }\r\n  }\r\n</script>\r\n<style scoped>\r\n    #fujian {\r\n        min-height: 100vh;\r\n    }\r\n</style>"]}]}